// Code generated by MockGen. DO NOT EDIT.
// Source: types.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	proto "k9s-autoscaler/pkg/proto"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEventCreator is a mock of EventCreator interface.
type MockEventCreator struct {
	ctrl     *gomock.Controller
	recorder *MockEventCreatorMockRecorder
}

// MockEventCreatorMockRecorder is the mock recorder for MockEventCreator.
type MockEventCreatorMockRecorder struct {
	mock *MockEventCreator
}

// NewMockEventCreator creates a new mock instance.
func NewMockEventCreator(ctrl *gomock.Controller) *MockEventCreator {
	mock := &MockEventCreator{ctrl: ctrl}
	mock.recorder = &MockEventCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEventCreator) EXPECT() *MockEventCreatorMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockEventCreator) Create(ctx context.Context, name, namespace string, event *proto.AutoscalerEvent) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, name, namespace, event)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockEventCreatorMockRecorder) Create(ctx, name, namespace, event interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockEventCreator)(nil).Create), ctx, name, namespace, event)
}
