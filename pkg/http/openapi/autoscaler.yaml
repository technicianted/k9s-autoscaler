components:
  schemas:
    Autoscaler:
      properties:
        name:
          description: Name must be unique within a namespace. Is required when creating autoscalers. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated.
          type: string
        namespace:
          description: Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation.
          type: string
        spec:
          $ref: '#/components/schemas/AutoscalerSpec'
        status:
          $ref: '#/components/schemas/AutoscalerStatus'
        version:
          description: An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
          type: string
      required:
      - name
      - namespace
      - version
      - spec
      type: object
    AutoscalerSpec:
      properties:
        Max:
          format: int32
          type: integer
        behavior:
          $ref: '#/components/schemas/Behavior'
        metrics:
          $ref: '#/components/schemas/Metric'
        min:
          format: int32
          type: integer
      required:
      - min
      - Max
      - metrics
      type: object
    AutoscalerStatus:
      properties:
        conditions:
          $ref: '#/components/schemas/Condition'
        currentScale:
          description: CurrentScale is current scale managed by this autoscaler, as last seen by the autoscaler. +optional
          format: int32
          type: integer
        desiredScale:
          description: desiredScale is the desired scale managed by this autoscaler, as last calculated by the autoscaler.
          format: int32
          type: integer
        lastScaleTime:
          format: date-time
          type: string
      required:
      - desiredScale
      - conditions
      type: object
    Behavior:
      description: Behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).
      properties:
        scaleDown:
          $ref: '#/components/schemas/ScalingRules'
        scaleUp:
          $ref: '#/components/schemas/ScalingRules'
      type: object
    Condition:
      description: Condition describes the state of an Autoscaler at a certain point.
      properties:
        lastTransitionTime:
          description: lastTransitionTime is the last time the condition transitioned from one status to another
          format: date-time
          type: string
        message:
          description: message is a human-readable explanation containing details about the transition
          type: string
        reason:
          description: reason is the reason for the condition's last transition.
          type: string
        status:
          description: status is the status of the condition (True, False, Unknown)
          type: string
        type:
          description: type describes the current condition
          enum:
          - ScalingUnknown
          - ScalingActive
          - AbleToScale
          - ScalingLimited
          type: string
      required:
      - type
      - status
      type: object
    Metric:
      properties:
        name:
          type: string
        target:
          type: number
      required:
      - name
      - target
      type: object
    ScalingRules:
      properties:
        selectPolicy:
          description: selectPolicy is used to specify which policy should be used. If not set, the default value Max is used.
          enum:
          - Unset
          - Max
          - Min
          - Disabled
          type: string
        stabilizationWindowSeconds:
          description: 'stabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down. StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long).'
          format: int32
          type: integer
      required:
      - stabilizationWindowSeconds
      type: object
info:
  title: OpenAPI Spec for Solo APIs.
  version: ""
openapi: 3.0.1
paths: null
