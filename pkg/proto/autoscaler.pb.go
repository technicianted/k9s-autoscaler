// Copyright (c) technicianted. All rights reserved.
// Licensed under the MIT License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.0--rc2
// source: autoscaler.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Scaling value type.
type ScalingPolicy_ValueType int32

const (
	// Given value is an absolute number of scale units.
	ScalingPolicy_Units ScalingPolicy_ValueType = 0
	// Given value is a percentage of current scale.
	ScalingPolicy_Percent ScalingPolicy_ValueType = 1
)

// Enum value maps for ScalingPolicy_ValueType.
var (
	ScalingPolicy_ValueType_name = map[int32]string{
		0: "Units",
		1: "Percent",
	}
	ScalingPolicy_ValueType_value = map[string]int32{
		"Units":   0,
		"Percent": 1,
	}
)

func (x ScalingPolicy_ValueType) Enum() *ScalingPolicy_ValueType {
	p := new(ScalingPolicy_ValueType)
	*p = x
	return p
}

func (x ScalingPolicy_ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScalingPolicy_ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_autoscaler_proto_enumTypes[0].Descriptor()
}

func (ScalingPolicy_ValueType) Type() protoreflect.EnumType {
	return &file_autoscaler_proto_enumTypes[0]
}

func (x ScalingPolicy_ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScalingPolicy_ValueType.Descriptor instead.
func (ScalingPolicy_ValueType) EnumDescriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{1, 0}
}

type ScalingRules_PolicySelect int32

const (
	// MaxChangePolicySelect  selects the policy with the highest possible change.
	ScalingRules_Max ScalingRules_PolicySelect = 0
	// MinChangePolicySelect selects the policy with the lowest possible change.
	ScalingRules_Min ScalingRules_PolicySelect = 1
	// DisabledPolicySelect disables the scaling in this direction.
	ScalingRules_Disabled ScalingRules_PolicySelect = 2
)

// Enum value maps for ScalingRules_PolicySelect.
var (
	ScalingRules_PolicySelect_name = map[int32]string{
		0: "Max",
		1: "Min",
		2: "Disabled",
	}
	ScalingRules_PolicySelect_value = map[string]int32{
		"Max":      0,
		"Min":      1,
		"Disabled": 2,
	}
)

func (x ScalingRules_PolicySelect) Enum() *ScalingRules_PolicySelect {
	p := new(ScalingRules_PolicySelect)
	*p = x
	return p
}

func (x ScalingRules_PolicySelect) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScalingRules_PolicySelect) Descriptor() protoreflect.EnumDescriptor {
	return file_autoscaler_proto_enumTypes[1].Descriptor()
}

func (ScalingRules_PolicySelect) Type() protoreflect.EnumType {
	return &file_autoscaler_proto_enumTypes[1]
}

func (x ScalingRules_PolicySelect) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScalingRules_PolicySelect.Descriptor instead.
func (ScalingRules_PolicySelect) EnumDescriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{2, 0}
}

type Condition_ConditionType int32

const (
	Condition_ScalingUnknown Condition_ConditionType = 0
	// ScalingActive indicates that the HPA controller is able to scale if necessary:
	// it's correctly configured, can fetch the desired metrics, and isn't disabled.
	Condition_ScalingActive Condition_ConditionType = 1
	// AbleToScale indicates a lack of transient issues which prevent scaling from occurring,
	// such as being in a backoff window, or being unable to access/update the target scale.
	Condition_AbleToScale Condition_ConditionType = 2
	// ScalingLimited indicates that the calculated scale based on metrics would be above or
	// below the range for the HPA, and has thus been capped.
	Condition_ScalingLimited Condition_ConditionType = 3
)

// Enum value maps for Condition_ConditionType.
var (
	Condition_ConditionType_name = map[int32]string{
		0: "ScalingUnknown",
		1: "ScalingActive",
		2: "AbleToScale",
		3: "ScalingLimited",
	}
	Condition_ConditionType_value = map[string]int32{
		"ScalingUnknown": 0,
		"ScalingActive":  1,
		"AbleToScale":    2,
		"ScalingLimited": 3,
	}
)

func (x Condition_ConditionType) Enum() *Condition_ConditionType {
	p := new(Condition_ConditionType)
	*p = x
	return p
}

func (x Condition_ConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Condition_ConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_autoscaler_proto_enumTypes[2].Descriptor()
}

func (Condition_ConditionType) Type() protoreflect.EnumType {
	return &file_autoscaler_proto_enumTypes[2]
}

func (x Condition_ConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Condition_ConditionType.Descriptor instead.
func (Condition_ConditionType) EnumDescriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{4, 0}
}

// Defines a metric entry in the autoscaler Spec.
type Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Metric name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Target absolute value.
	Target int64 `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	// Provider specific configurations.
	Config *anypb.Any `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{0}
}

func (x *Metric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metric) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *Metric) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

// Define the autoscaler scaling policy.
// see: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#scaling-policies
type ScalingPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of value. Default to Units.
	ValueType ScalingPolicy_ValueType `protobuf:"varint,1,opt,name=value_type,json=valueType,proto3,enum=k9sautoscaler.proto.ScalingPolicy_ValueType" json:"value_type,omitempty"`
	// value contains the amount of change which is permitted by the policy.
	// It must be greater than zero
	Value int32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	// periodSeconds specifies the window of time for which the policy should hold true.
	// PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
	PeriodSeconds int32 `protobuf:"varint,3,opt,name=period_seconds,json=periodSeconds,proto3" json:"period_seconds,omitempty"`
}

func (x *ScalingPolicy) Reset() {
	*x = ScalingPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalingPolicy) ProtoMessage() {}

func (x *ScalingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalingPolicy.ProtoReflect.Descriptor instead.
func (*ScalingPolicy) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{1}
}

func (x *ScalingPolicy) GetValueType() ScalingPolicy_ValueType {
	if x != nil {
		return x.ValueType
	}
	return ScalingPolicy_Units
}

func (x *ScalingPolicy) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *ScalingPolicy) GetPeriodSeconds() int32 {
	if x != nil {
		return x.PeriodSeconds
	}
	return 0
}

// Define scaling rules:
// see: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#scaling-policies
type ScalingRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// stabilizationWindowSeconds is the number of seconds for which past recommendations should be
	// considered while scaling up or scaling down.
	// StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour).
	// If not set, use the default values:
	// - For scale up: 0 (i.e. no stabilization is done).
	// - For scale down: 300 (i.e. the stabilization window is 300 seconds long).
	StabilizationWindowSeconds *int32 `protobuf:"varint,1,opt,name=stabilization_window_seconds,json=stabilizationWindowSeconds,proto3,oneof" json:"stabilization_window_seconds,omitempty"`
	// selectPolicy is used to specify which policy should be used.
	// If not set, the default value Max is used.
	SelectPolicy ScalingRules_PolicySelect `protobuf:"varint,2,opt,name=select_policy,json=selectPolicy,proto3,enum=k9sautoscaler.proto.ScalingRules_PolicySelect" json:"select_policy,omitempty"`
	// policies is a list of potential scaling polices which can be used during scaling.
	// At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
	Policies []*ScalingPolicy `protobuf:"bytes,3,rep,name=policies,proto3" json:"policies,omitempty"`
}

func (x *ScalingRules) Reset() {
	*x = ScalingRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScalingRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScalingRules) ProtoMessage() {}

func (x *ScalingRules) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScalingRules.ProtoReflect.Descriptor instead.
func (*ScalingRules) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{2}
}

func (x *ScalingRules) GetStabilizationWindowSeconds() int32 {
	if x != nil && x.StabilizationWindowSeconds != nil {
		return *x.StabilizationWindowSeconds
	}
	return 0
}

func (x *ScalingRules) GetSelectPolicy() ScalingRules_PolicySelect {
	if x != nil {
		return x.SelectPolicy
	}
	return ScalingRules_Max
}

func (x *ScalingRules) GetPolicies() []*ScalingPolicy {
	if x != nil {
		return x.Policies
	}
	return nil
}

// Behavior configures the scaling behavior of the target
// in both Up and Down directions (scaleUp and scaleDown fields respectively).
// see: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#configurable-scaling-behavior
type Behavior struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// scaleUp is scaling policy for scaling Up.
	// If not set, the default value is the higher of:
	//   - increase no more than 4 pods per 60 seconds
	//   - double the number of pods per 60 seconds
	//
	// No stabilization is used.
	ScaleUp *ScalingRules `protobuf:"bytes,1,opt,name=scale_up,json=scaleUp,proto3,oneof" json:"scale_up,omitempty"`
	// scaleDown is scaling policy for scaling Down.
	// If not set, the default value is to allow to scale down to minReplicas pods, with a
	// 300 second stabilization window (i.e., the highest recommendation for
	// the last 300sec is used).
	ScaleDown *ScalingRules `protobuf:"bytes,2,opt,name=scale_down,json=scaleDown,proto3,oneof" json:"scale_down,omitempty"`
}

func (x *Behavior) Reset() {
	*x = Behavior{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Behavior) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Behavior) ProtoMessage() {}

func (x *Behavior) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Behavior.ProtoReflect.Descriptor instead.
func (*Behavior) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{3}
}

func (x *Behavior) GetScaleUp() *ScalingRules {
	if x != nil {
		return x.ScaleUp
	}
	return nil
}

func (x *Behavior) GetScaleDown() *ScalingRules {
	if x != nil {
		return x.ScaleDown
	}
	return nil
}

// Condition describes the state of
// an Autoscaler at a certain point.
type Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type describes the current condition
	Type Condition_ConditionType `protobuf:"varint,1,opt,name=type,proto3,enum=k9sautoscaler.proto.Condition_ConditionType" json:"type,omitempty"`
	// status is the status of the condition (True, False, Unknown)
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// lastTransitionTime is the last time the condition transitioned from
	// one status to another
	LastTransitionTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_transition_time,json=lastTransitionTime,proto3,oneof" json:"last_transition_time,omitempty"`
	// reason is the reason for the condition's last transition.
	Reason string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	// message is a human-readable explanation containing details about
	// the transition
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Condition) Reset() {
	*x = Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Condition) ProtoMessage() {}

func (x *Condition) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Condition.ProtoReflect.Descriptor instead.
func (*Condition) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{4}
}

func (x *Condition) GetType() Condition_ConditionType {
	if x != nil {
		return x.Type
	}
	return Condition_ScalingUnknown
}

func (x *Condition) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Condition) GetLastTransitionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastTransitionTime
	}
	return nil
}

func (x *Condition) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Condition) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AutoscalerTarget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *anypb.Any `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *AutoscalerTarget) Reset() {
	*x = AutoscalerTarget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoscalerTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoscalerTarget) ProtoMessage() {}

func (x *AutoscalerTarget) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoscalerTarget.ProtoReflect.Descriptor instead.
func (*AutoscalerTarget) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{5}
}

func (x *AutoscalerTarget) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

// Defines k9s autoscaler specs. These are a subset of k8s HPA specs.
type AutoscalerSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Minimum scale.
	Min int32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum scale.
	Max int32 `protobuf:"varint,2,opt,name=Max,json=max,proto3" json:"Max,omitempty"`
	// Scaling metrics and their targets.
	Metrics []*Metric `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty"`
	// Autoscaler behaviour.
	// see: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#configurable-scaling-behavior
	Behavior *Behavior         `protobuf:"bytes,4,opt,name=behavior,proto3,oneof" json:"behavior,omitempty"`
	Target   *AutoscalerTarget `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *AutoscalerSpec) Reset() {
	*x = AutoscalerSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoscalerSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoscalerSpec) ProtoMessage() {}

func (x *AutoscalerSpec) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoscalerSpec.ProtoReflect.Descriptor instead.
func (*AutoscalerSpec) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{6}
}

func (x *AutoscalerSpec) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *AutoscalerSpec) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *AutoscalerSpec) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *AutoscalerSpec) GetBehavior() *Behavior {
	if x != nil {
		return x.Behavior
	}
	return nil
}

func (x *AutoscalerSpec) GetTarget() *AutoscalerTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

// Defines k9s autoscaler status. These are a subset of k8s HPA status.
type AutoscalerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastScaleTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_scale_time,json=lastScaleTime,proto3,oneof" json:"last_scale_time,omitempty"`
	// CurrentScale is current scale managed by this autoscaler,
	// as last seen by the autoscaler.
	// +optional
	CurrentScale *int32 `protobuf:"varint,2,opt,name=current_scale,json=currentScale,proto3,oneof" json:"current_scale,omitempty"`
	// desiredScale is the desired scale managed by this autoscaler,
	// as last calculated by the autoscaler.
	DesiredScale int32 `protobuf:"varint,3,opt,name=desired_scale,json=desiredScale,proto3" json:"desired_scale,omitempty"`
	// conditions is the set of conditions required for this autoscaler to scale its target,
	// and indicates whether or not those conditions are met.
	Conditions []*Condition `protobuf:"bytes,4,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *AutoscalerStatus) Reset() {
	*x = AutoscalerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoscalerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoscalerStatus) ProtoMessage() {}

func (x *AutoscalerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoscalerStatus.ProtoReflect.Descriptor instead.
func (*AutoscalerStatus) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{7}
}

func (x *AutoscalerStatus) GetLastScaleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastScaleTime
	}
	return nil
}

func (x *AutoscalerStatus) GetCurrentScale() int32 {
	if x != nil && x.CurrentScale != nil {
		return *x.CurrentScale
	}
	return 0
}

func (x *AutoscalerStatus) GetDesiredScale() int32 {
	if x != nil {
		return x.DesiredScale
	}
	return 0
}

func (x *AutoscalerStatus) GetConditions() []*Condition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

// Defines top-level k9s autoscaler.
type Autoscaler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name must be unique within a namespace. Is required when creating autoscalers.
	// Name is primarily intended for creation idempotence and configuration
	// definition.
	// Cannot be updated.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Namespace defines the space within which each name must be unique. An empty namespace is
	// equivalent to the "default" namespace, but "default" is the canonical representation.
	//
	// Must be a DNS_LABEL.
	// Cannot be updated.
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// An opaque value that represents the internal version of this object that can
	// be used by clients to determine when objects have changed. May be used for optimistic
	// concurrency, change detection, and the watch operation on a resource or set of resources.
	// Clients must treat these values as opaque and passed unmodified back to the server.
	// They may only be valid for a particular resource or set of resources.
	//
	// +optional
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// spec is the specification for the behaviour of the autoscaler.
	Spec *AutoscalerSpec `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	// status is the current information about the autoscaler.
	// +optional
	Status *AutoscalerStatus `protobuf:"bytes,5,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *Autoscaler) Reset() {
	*x = Autoscaler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Autoscaler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Autoscaler) ProtoMessage() {}

func (x *Autoscaler) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Autoscaler.ProtoReflect.Descriptor instead.
func (*Autoscaler) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{8}
}

func (x *Autoscaler) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Autoscaler) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Autoscaler) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Autoscaler) GetSpec() *AutoscalerSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Autoscaler) GetStatus() *AutoscalerStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// ScaleSpec describes the attributes of a scale.
type ScaleSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the desired scale for the scaled object.
	Desired int32 `protobuf:"varint,1,opt,name=desired,proto3" json:"desired,omitempty"`
}

func (x *ScaleSpec) Reset() {
	*x = ScaleSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleSpec) ProtoMessage() {}

func (x *ScaleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleSpec.ProtoReflect.Descriptor instead.
func (*ScaleSpec) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{9}
}

func (x *ScaleSpec) GetDesired() int32 {
	if x != nil {
		return x.Desired
	}
	return 0
}

// ScaleStatus represents the current status of a scale subresource.
type ScaleStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// replicas is the actual scale of the scaled object.
	Current int32 `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *ScaleStatus) Reset() {
	*x = ScaleStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleStatus) ProtoMessage() {}

func (x *ScaleStatus) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleStatus.ProtoReflect.Descriptor instead.
func (*ScaleStatus) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{10}
}

func (x *ScaleStatus) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

// Scale represents a scaling request for a resource.
type Scale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// spec defines the behavior of the scale.
	Spec *ScaleSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	// status is the current status of the scale.
	Status *ScaleStatus `protobuf:"bytes,2,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *Scale) Reset() {
	*x = Scale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scale) ProtoMessage() {}

func (x *Scale) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scale.ProtoReflect.Descriptor instead.
func (*Scale) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{11}
}

func (x *Scale) GetSpec() *ScaleSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Scale) GetStatus() *ScaleStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// Defines a single k9s scaling event.
type AutoscalerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This should be a short, machine understandable string that gives the reason
	// for the transition into the object's current status.
	// TODO: provide exact specification for format.
	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	// A human-readable description of the status of this operation.
	// TODO: decide on maximum length.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)
	FirstTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=first_timestamp,json=firstTimestamp,proto3" json:"first_timestamp,omitempty"`
	// The time at which the most recent occurrence of this event was recorded.
	// +optional
	LastTimestamp *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_timestamp,json=lastTimestamp,proto3" json:"last_timestamp,omitempty"`
	// The number of times this event has occurred.
	Count int32 `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	// Type of this event (Normal, Warning), new types could be added in the future
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	// Time when this Event was first observed.
	EventTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	// What action was taken/failed regarding to the Regarding object.
	Action string `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *AutoscalerEvent) Reset() {
	*x = AutoscalerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autoscaler_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoscalerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoscalerEvent) ProtoMessage() {}

func (x *AutoscalerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_autoscaler_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoscalerEvent.ProtoReflect.Descriptor instead.
func (*AutoscalerEvent) Descriptor() ([]byte, []int) {
	return file_autoscaler_proto_rawDescGZIP(), []int{12}
}

func (x *AutoscalerEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AutoscalerEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AutoscalerEvent) GetFirstTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstTimestamp
	}
	return nil
}

func (x *AutoscalerEvent) GetLastTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastTimestamp
	}
	return nil
}

func (x *AutoscalerEvent) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AutoscalerEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AutoscalerEvent) GetEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTime
	}
	return nil
}

func (x *AutoscalerEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

var File_autoscaler_proto protoreflect.FileDescriptor

var file_autoscaler_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x6b, 0x39, 0x73, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xbe, 0x01, 0x0a, 0x0d, 0x53, 0x63, 0x61, 0x6c,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x4b, 0x0a, 0x0a, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e,
	0x6b, 0x39, 0x73, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x23, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x09, 0x0a, 0x05, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x22, 0xbb, 0x02, 0x0a, 0x0c, 0x53, 0x63, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x1c, 0x73, 0x74, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x1a, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x53, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6b, 0x39, 0x73, 0x61, 0x75, 0x74,
	0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63,
	0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x39, 0x73, 0x61, 0x75, 0x74,
	0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63,
	0x61, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x08, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x0c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x61, 0x78, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x4d, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x10, 0x02, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x73, 0x74, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x08, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x08, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x39, 0x73, 0x61, 0x75, 0x74, 0x6f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c,
	0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x55, 0x70, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0a, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f,
	0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x39, 0x73,
	0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x01, 0x52,
	0x09, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0xe0, 0x02, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6b, 0x39, 0x73, 0x61, 0x75, 0x74, 0x6f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x51, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x12, 0x6c,
	0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5b, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x63, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x41, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x10, 0x02, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x64, 0x10, 0x03, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x10,
	0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xf7,
	0x01, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x39, 0x73, 0x61, 0x75, 0x74, 0x6f,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x3e, 0x0a, 0x08,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x6b, 0x39, 0x73, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x08, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6b,
	0x39, 0x73, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x22, 0x90, 0x02, 0x0a, 0x10, 0x41, 0x75, 0x74,
	0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x39, 0x73, 0x61,
	0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x0a,
	0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6b, 0x39, 0x73, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12,
	0x42, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6b, 0x39, 0x73, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x25,
	0x0a, 0x09, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65,
	0x73, 0x69, 0x72, 0x65, 0x64, 0x22, 0x27, 0x0a, 0x0b, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x85,
	0x01, 0x0a, 0x05, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6b, 0x39, 0x73, 0x61, 0x75, 0x74, 0x6f,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x3d, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6b,
	0x39, 0x73, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc8, 0x02, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x6f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0f,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x41, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x20, 0x5a, 0x1e, 0x6b, 0x39, 0x73, 0x2d, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_autoscaler_proto_rawDescOnce sync.Once
	file_autoscaler_proto_rawDescData = file_autoscaler_proto_rawDesc
)

func file_autoscaler_proto_rawDescGZIP() []byte {
	file_autoscaler_proto_rawDescOnce.Do(func() {
		file_autoscaler_proto_rawDescData = protoimpl.X.CompressGZIP(file_autoscaler_proto_rawDescData)
	})
	return file_autoscaler_proto_rawDescData
}

var file_autoscaler_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_autoscaler_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_autoscaler_proto_goTypes = []interface{}{
	(ScalingPolicy_ValueType)(0),   // 0: k9sautoscaler.proto.ScalingPolicy.ValueType
	(ScalingRules_PolicySelect)(0), // 1: k9sautoscaler.proto.ScalingRules.PolicySelect
	(Condition_ConditionType)(0),   // 2: k9sautoscaler.proto.Condition.ConditionType
	(*Metric)(nil),                 // 3: k9sautoscaler.proto.Metric
	(*ScalingPolicy)(nil),          // 4: k9sautoscaler.proto.ScalingPolicy
	(*ScalingRules)(nil),           // 5: k9sautoscaler.proto.ScalingRules
	(*Behavior)(nil),               // 6: k9sautoscaler.proto.Behavior
	(*Condition)(nil),              // 7: k9sautoscaler.proto.Condition
	(*AutoscalerTarget)(nil),       // 8: k9sautoscaler.proto.AutoscalerTarget
	(*AutoscalerSpec)(nil),         // 9: k9sautoscaler.proto.AutoscalerSpec
	(*AutoscalerStatus)(nil),       // 10: k9sautoscaler.proto.AutoscalerStatus
	(*Autoscaler)(nil),             // 11: k9sautoscaler.proto.Autoscaler
	(*ScaleSpec)(nil),              // 12: k9sautoscaler.proto.ScaleSpec
	(*ScaleStatus)(nil),            // 13: k9sautoscaler.proto.ScaleStatus
	(*Scale)(nil),                  // 14: k9sautoscaler.proto.Scale
	(*AutoscalerEvent)(nil),        // 15: k9sautoscaler.proto.AutoscalerEvent
	(*anypb.Any)(nil),              // 16: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),  // 17: google.protobuf.Timestamp
}
var file_autoscaler_proto_depIdxs = []int32{
	16, // 0: k9sautoscaler.proto.Metric.config:type_name -> google.protobuf.Any
	0,  // 1: k9sautoscaler.proto.ScalingPolicy.value_type:type_name -> k9sautoscaler.proto.ScalingPolicy.ValueType
	1,  // 2: k9sautoscaler.proto.ScalingRules.select_policy:type_name -> k9sautoscaler.proto.ScalingRules.PolicySelect
	4,  // 3: k9sautoscaler.proto.ScalingRules.policies:type_name -> k9sautoscaler.proto.ScalingPolicy
	5,  // 4: k9sautoscaler.proto.Behavior.scale_up:type_name -> k9sautoscaler.proto.ScalingRules
	5,  // 5: k9sautoscaler.proto.Behavior.scale_down:type_name -> k9sautoscaler.proto.ScalingRules
	2,  // 6: k9sautoscaler.proto.Condition.type:type_name -> k9sautoscaler.proto.Condition.ConditionType
	17, // 7: k9sautoscaler.proto.Condition.last_transition_time:type_name -> google.protobuf.Timestamp
	16, // 8: k9sautoscaler.proto.AutoscalerTarget.config:type_name -> google.protobuf.Any
	3,  // 9: k9sautoscaler.proto.AutoscalerSpec.metrics:type_name -> k9sautoscaler.proto.Metric
	6,  // 10: k9sautoscaler.proto.AutoscalerSpec.behavior:type_name -> k9sautoscaler.proto.Behavior
	8,  // 11: k9sautoscaler.proto.AutoscalerSpec.target:type_name -> k9sautoscaler.proto.AutoscalerTarget
	17, // 12: k9sautoscaler.proto.AutoscalerStatus.last_scale_time:type_name -> google.protobuf.Timestamp
	7,  // 13: k9sautoscaler.proto.AutoscalerStatus.conditions:type_name -> k9sautoscaler.proto.Condition
	9,  // 14: k9sautoscaler.proto.Autoscaler.spec:type_name -> k9sautoscaler.proto.AutoscalerSpec
	10, // 15: k9sautoscaler.proto.Autoscaler.status:type_name -> k9sautoscaler.proto.AutoscalerStatus
	12, // 16: k9sautoscaler.proto.Scale.spec:type_name -> k9sautoscaler.proto.ScaleSpec
	13, // 17: k9sautoscaler.proto.Scale.status:type_name -> k9sautoscaler.proto.ScaleStatus
	17, // 18: k9sautoscaler.proto.AutoscalerEvent.first_timestamp:type_name -> google.protobuf.Timestamp
	17, // 19: k9sautoscaler.proto.AutoscalerEvent.last_timestamp:type_name -> google.protobuf.Timestamp
	17, // 20: k9sautoscaler.proto.AutoscalerEvent.event_time:type_name -> google.protobuf.Timestamp
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_autoscaler_proto_init() }
func file_autoscaler_proto_init() {
	if File_autoscaler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_autoscaler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalingPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScalingRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Behavior); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoscalerTarget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoscalerSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoscalerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Autoscaler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autoscaler_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoscalerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_autoscaler_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_autoscaler_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_autoscaler_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_autoscaler_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_autoscaler_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_autoscaler_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_autoscaler_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_autoscaler_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_autoscaler_proto_goTypes,
		DependencyIndexes: file_autoscaler_proto_depIdxs,
		EnumInfos:         file_autoscaler_proto_enumTypes,
		MessageInfos:      file_autoscaler_proto_msgTypes,
	}.Build()
	File_autoscaler_proto = out.File
	file_autoscaler_proto_rawDesc = nil
	file_autoscaler_proto_goTypes = nil
	file_autoscaler_proto_depIdxs = nil
}
